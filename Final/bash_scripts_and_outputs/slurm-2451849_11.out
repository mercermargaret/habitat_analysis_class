Wed Nov 20 21:17:35 MST 2024
Initiating script
── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.4     ✔ readr     2.1.5
✔ forcats   1.0.0     ✔ stringr   1.5.1
✔ ggplot2   3.5.1     ✔ tibble    3.2.1
✔ lubridate 1.9.3     ✔ tidyr     1.3.1
✔ purrr     1.0.2     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ ggplot2::annotate() masks ctmm::annotate()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
Linking to GEOS 3.9.5, GDAL 3.8.5, PROJ 9.4.0; sf_use_s2() is TRUE
Loading required package: sp

Attaching package: ‘raster’

The following object is masked from ‘package:dplyr’:

    select

The following objects are masked from ‘package:ctmm’:

    projection, projection<-

terra 1.7.78

Attaching package: ‘terra’

The following object is masked from ‘package:tidyr’:

    extract

The following objects are masked from ‘package:ctmm’:

    distance, meta

[1] "/home/u15/mmercer3/proj/habitat_analysis_class/Final/Model_Fit_Results/roads_1500/Minnie_rr.Rda"
     [,1]                                
[1,] "Data loaded at 2024-11-20 21:17:46"
Some rasters are not loaded in RAM and may be slow to process. See help("raster::readAll").
Maximizing likelihood @ n=1×775=775
 SD[log(ℓ)] = 11.8422223706654
 Δlog(ℓ) = Inf
 Δβ/SD[β] = -0.129309827763884 -0.155507049236237 0.637060032571719 0.0184203154839266 0.173034210810737 -1.24776257844851 0.595705588819105 0.128144631548107
Maximizing likelihood @ n=2×775=1550
 SD[log(ℓ)] = 10.7169337363564
 Δlog(ℓ) = 41.8453883337945
 Δβ/SD[β] = 0.961206977012232 -0.588962262217483 -0.16711300496548 0.747937360762714 0.224826835172701 -0.359897781023886 0.531416992599979 0.142073193614997
Maximizing likelihood @ n=4×775=3100
 SD[log(ℓ)] = 8.06175489910558
 Δlog(ℓ) = 8.14770688850282
 Δβ/SD[β] = -0.191644044304455 -0.106953698648965 0.729911728355795 0.854500860180287 -0.117325235923807 0.121573842722228 0.088261306178621 -0.237285991535702
Maximizing likelihood @ n=8×775=6200
 SD[log(ℓ)] = 6.10367478615759
 Δlog(ℓ) = 15.7921918608302
 Δβ/SD[β] = 0.0256785191227441 0.00684945146095826 0.26076531005992 0.0503305026550007 0.1431372528035 -0.00601249585797989 0.0737403231846943 0.12064093563897
Maximizing likelihood @ n=16×775=12400
 SD[log(ℓ)] = 4.72486916064549
 Δlog(ℓ) = 17.4368227767128
 Δβ/SD[β] = -0.216981740431859 -1.70857257750644 2.29842419177741 2.12519105221507 2.02395376963923 0.231031243078749 0.106899423961443 0.968486917695781
Maximizing likelihood @ n=32×775=24800
 SD[log(ℓ)] = 3.52942113046927
 Δlog(ℓ) = 16.8203851910351
 Δβ/SD[β] = -0.232281159447869 -1.25005504926662 1.50363230611268 1.241282983686 1.47529074383325 0.916136532834551 0.0824123747069611 0.265822830753308
Maximizing likelihood @ n=64×775=49600
 SD[log(ℓ)] = 2.68481078405692
 Δlog(ℓ) = 8.16255466022415
 Δβ/SD[β] = -0.0317874657116196 -0.471297983142487 1.19014614578773 1.17232003942688 0.711486435332101 -0.174487153393257 0.298539836443761 -0.0072147430970804
Maximizing likelihood @ n=128×775=99200
 SD[log(ℓ)] = 1.92523906935323
 Δlog(ℓ) = 3.10076468482208
 Δβ/SD[β] = 0.0323077098986542 -0.143962316099092 0.127690780300512 0.164750449324555 0.121142196271492 0.0530018141289734 0.229570060720041 0.122862098266904
Maximizing likelihood @ n=256×775=198400
 SD[log(ℓ)] = 1.3692296897616
 Δlog(ℓ) = 1.2400943073124
 Δβ/SD[β] = 0.0453217829563108 -0.0556547275812936 0.122103397400273 0.0311462310463159 0.0546872801247987 0.0347083992923717 0.0301561700020129 0.0257036303025811
Maximizing likelihood @ n=512×775=396800
 SD[log(ℓ)] = 0.971803554973805
 Δlog(ℓ) = 0.882858919866123
 Δβ/SD[β] = -0.00239230929698809 -0.000375287559484329 0.11432989288262 0.00673934146963243 0.0666833098362667 -0.000209439725161911 0.0429351627531083 -0.0168976237776636
Maximizing likelihood @ n=1024×775=793600
 SD[log(ℓ)] = 0.688930171208357
 Δlog(ℓ) = -0.841154021905197
 Δβ/SD[β] = -0.0117583524201279 -0.0196743652516456 0.0406299820443973 -0.00583523294528442 0.0165926140916277 0.0080129110865113 0.00798179016312853 0.0218355549341112
Maximizing likelihood @ n=2048×775=1587200
 SD[log(ℓ)] = 0.488282061212954
 Δlog(ℓ) = 0.548141932714259
 Δβ/SD[β] = 0.00975118328851897 -0.0406709887507862 0.0365244206719421 -0.0163429424431865 0.0149173764924338 0.0387874233860516 0.0443967066147825 0.0199926024693254
Maximizing likelihood @ n=4096×775=3174400
 SD[log(ℓ)] = 0.345840399963392
 Δlog(ℓ) = 0.109463730438449
 Δβ/SD[β] = -0.00721290251702919 -0.0358312464977111 0.0116233157028945 0.0019482277135887 0.037978848603906 -0.0193797546688947 0.0130884011559169 -0.0162595409626995
Maximizing likelihood @ n=8192×775=6348800
 SD[log(ℓ)] = 0.24502806545707
 Δlog(ℓ) = 0.121773370383607
 Δβ/SD[β] = -0.0222457140400158 -0.0511306398866612 0.0480540306226102 0.0274908887874725 0.00659987723236876 0.0519674555352649 -0.00852168321689204 -0.00544355485033823
Maximizing likelihood @ n=16384×775=12697600
 SD[log(ℓ)] = 0.17292033742649
 Δlog(ℓ) = 0.394534084676764
 Δβ/SD[β] = -0.0165593046100298 -0.0354387680342959 -0.0287375285192457 0.0162729480436043 0.024383556520249 0.0255058708621304 0.00775904224865691 -0.030060720497963
Maximizing likelihood @ n=32768×775=25395200
 SD[log(ℓ)] = 0.122394733037771
 Δlog(ℓ) = -0.0941267239489321
 Δβ/SD[β] = 0.0114331341827988 -0.0302812423570382 0.00833038525626627 0.0176114011453171 -0.0236123923216587 0.0272352736906606 -0.00381099600401332 0.0185058441888364
Calculating Hessian
Warning message:
In rsf.fit(individual, individual_akde, R = R, max.mem = "2 Gb") :
  Calculation stopped before 3 Gb allocation.
Script complete
Wed Nov 20 22:14:28 MST 2024
